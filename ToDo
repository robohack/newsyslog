NEWSYSLOG ToDo -- Things that could be fixed/improved/added.

Patches to close any of these items will be gratefully accepted!  Other
suggestions and comments are also encouraged.

- we really need an option (-C) that just makes sure all the logs exist
  and have the right ownerships and permissions (because '-F' is useless
  for this purpose on any existing system).  [what about ownerships and
  permissions of archived logs?  what about extra copies of archived
  logs that'll never be overwritten, e.g. if the count is reduced?]

- fix handling of log file timestamps to take into account timezones.
  Note that the common log format actually includes " {+-}TZOFF" after
  the time, but strptime() doesn't seem to have a way to parse and use
  this value.  Syslog timestamps are in local time, so watch out for
  stupid daylight savings confusion too!

- what happens, or should happen, if/when there are multiple PIDs in a
  pidfile?

- support specification of multiple pidfiles for a given log, e.g. as:

	/var/run/named-outside.pid,/var/run/named-inside.pid

- Add one more optional field:  the format of the turnover message, with
  the default to be the "syslog" style:

	Mar 15 00:00:01 most newsyslog[17295]: logfile turned over

  Nothing fancy though.  Just strftime() formats, plus one magic
  specifier to represent where the hostname goes (%@), and another magic
  specifier for the "newsyslog[17295]: logfile turned over" part (%#).
  (i.e. run the format specifier through a simple replacement editor for
  the two magic strings, and then pass it to strftime()).  The default
  would thus be something like this:

	"%b %d %T %@ %#"

- Reverse the order of operations when checking the age of the log file
  such that the timestamp is always read from the first record of
  non-binary log files using the turnover format as a guide.  Only
  binary files will revert to checking the age of the .0 file.  This
  will make newsyslog less sensitive to the affects of anyone messing
  with the archive copies, and more accurate for the first go-around on
  non-syslog format log files.

  Perhaps this should only be done for files archived at 24hr multiples
  (i.e. '-m'), and in these cases the turnover message should also be
  entered immediately in the new log file too.  This will ensure that
  age determination does not rely on when the daemon writes its first
  log entry.  It may make parsing the first entry easier too.

  One possible limitation here is that the timestamp may have to appear
  at the beginning of the line (with only constant characters before and
  within it).  The only way around this might be to iterate strptime()
  starting at each successive character in the string to try and find a
  parsable date format that matches the turnover format as it would be
  with the two magic strings stripped off.

  For example the standard syslog format "%b %d %T %@ %#" would strip
  down to "%b %d %T ", which would hopefully match at offset 0 into the
  first log entry.

  An HTTP Common Log Format turnover message output format might be:

	"%@ - - [%Y/%m/%d:%T] \"%#\""

  This would have to be stripped down to the following for strptime():

	"%Y/%m/%d:%T] \""

- add support for specifying size and interval units other than KB & hrs.

- implement an option for historical log file suffixes (suggested by
  Andy Doran <ad@netbsd.org>) (i.e. ".YYYYMMDDHHMMSS" or
  ".YYYY-MM-DD.HH:MM:SS" or whatever)

  FreeBSD may someday use the Toshihisa Eto <eto@clave.gr.jp> patch with
  the format ".YYYMMDD-NN":

    http://www.clave.gr.jp/~eto/software/newsyslog/newsyslog.diff.gz

- implement FreeBSD's CE_SIGNALGROUP (send signal to negated PID).

- add a '--with-bzip2' configure option (FreeBSD uses 'J' as the flag to
  indicate bzip2 should be used to compress the log)

- add a '--with-compress_options=options' option too

  --with-compress_options=options pass these additional options to
                                  compress (or gzip or bzip2)

- think about FreeBSD's 'W' (wait) flag to wait for compression jobs for
  a given entry.

- think (but not too hard, this is ugly) about supporting the FreeBSD
  'G' (glob(3)) flag.  Yuck.  But it would make it easier to manage the
  logs of some RADIUS daemons....

- think about OpenBSD's "monitor" feature:  an 'M' in the flag field
  which says the next field is an account name to receive an e-mail
  notification whenever the log file is rolled over.

- think (briefly) about OpenBSD's optional command-run feature which
  uses the pid_file field when the signal number is specified '-1' to
  specify a command to run instead of sending a signal.  Perhaps there's
  a better syntax that should be used, eg. another new flag letter.

- consider mentioning cronolog (good for things that can pipe to logs,
  as well as possibly a post-processor for archiving logs):

	http://www.cronolog.org/

  (there, that's done! ;-)


#ident	"@(#)newsyslog:$Name:  $:$Id: ToDo,v 1.14 2006/09/29 20:15:43 woods Exp $"
